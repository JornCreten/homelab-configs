{{- if .Values.nginx.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "omni-core.fullname" . }}-nginx-config
  labels:
    {{- include "omni-core.labels" . | nindent 4 }}
    app.kubernetes.io/component: nginx
data:
  nginx.conf: |
    worker_processes {{ .Values.nginx.config.workerProcesses }};
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections {{ .Values.nginx.config.workerConnections }};
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

        access_log /var/log/nginx/access.log main;

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size {{ .Values.nginx.config.clientMaxBodySize }};

        # SSL Configuration
        {{- if .Values.nginx.ssl.enabled }}
        ssl_protocols {{ .Values.nginx.ssl.protocols }};
        ssl_ciphers {{ .Values.nginx.ssl.ciphers }};
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 5m;
        {{- end }}

        # Rate Limiting
        {{- if .Values.nginx.rateLimiting.enabled }}
        limit_req_zone $binary_remote_addr zone=api:10m rate={{ .Values.nginx.rateLimiting.requests }}r/s;
        {{- end }}

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types text/plain text/css text/xml application/json application/javascript application/xml+rss text/javascript;

        include /etc/nginx/conf.d/*.conf;
    }

  default.conf: |
    # Omni Main UI
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name {{ include "omni-core.domain" . }};

        {{- if .Values.nginx.ssl.enabled }}
        ssl_certificate /etc/nginx/ssl/tls.crt;
        ssl_certificate_key /etc/nginx/ssl/tls.key;
        {{- end }}

        {{- if .Values.nginx.rateLimiting.enabled }}
        # Rate limiting
        limit_req zone=api burst={{ .Values.nginx.rateLimiting.burst }} nodelay;
        {{- end }}

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Proxy settings
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        location / {
            proxy_pass http://{{ include "omni-core.fullname" . }}-omni:{{ .Values.omni.service.port }};
        }
    }

    # Machine API
    server {
        listen 8090 ssl http2;
        listen [::]:8090 ssl http2;
        server_name {{ include "omni-core.domain" . }};

        {{- if .Values.nginx.ssl.enabled }}
        ssl_certificate /etc/nginx/ssl/tls.crt;
        ssl_certificate_key /etc/nginx/ssl/tls.key;
        {{- end }}

        location / {
            proxy_pass http://{{ include "omni-core.fullname" . }}-omni:{{ .Values.omni.service.port }};
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # K8s Proxy
    server {
        listen 8100 ssl http2;
        listen [::]:8100 ssl http2;
        server_name {{ include "omni-core.domain" . }};

        {{- if .Values.nginx.ssl.enabled }}
        ssl_certificate /etc/nginx/ssl/tls.crt;
        ssl_certificate_key /etc/nginx/ssl/tls.key;
        {{- end }}

        location / {
            proxy_pass http://{{ include "omni-core.fullname" . }}-omni:{{ .Values.omni.service.port }};
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Nginx Status (for monitoring)
    server {
        listen 8080;
        server_name localhost;

        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
    }

    # HTTP redirect to HTTPS
    server {
        listen 80;
        listen [::]:80;
        server_name {{ include "omni-core.domain" . }};
        return 301 https://$server_name$request_uri;
    }
{{- end }}
