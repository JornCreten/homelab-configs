# Keycloak
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name keycloak.${DOMAIN_NAME};

    ssl_certificate /etc/nginx/ssl/default.crt;
    ssl_certificate_key /etc/nginx/ssl/default.key;

    # Rate limiting for auth endpoints
    limit_req zone=login burst=5 nodelay;

    # Proxy settings
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;

    # Keycloak specific headers
    proxy_set_header X-Forwarded-Ssl on;

    location / {
        proxy_pass http://keycloak_backend;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }
}

# Grafana
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name grafana.${DOMAIN_NAME};

    ssl_certificate /etc/nginx/ssl/default.crt;
    ssl_certificate_key /etc/nginx/ssl/default.key;

    # Proxy settings
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # WebSocket support for live updates
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    location / {
        proxy_pass http://grafana_backend;
    }
}

# Prometheus
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name prometheus.${DOMAIN_NAME};

    ssl_certificate /etc/nginx/ssl/default.crt;
    ssl_certificate_key /etc/nginx/ssl/default.key;

    # Basic auth or IP restriction (optional)
    # auth_basic "Prometheus";
    # auth_basic_user_file /etc/nginx/.htpasswd;

    # Proxy settings
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    location / {
        proxy_pass http://prometheus_backend;
    }
}

# Pi-hole
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name pihole.${DOMAIN_NAME};

    ssl_certificate /etc/nginx/ssl/default.crt;
    ssl_certificate_key /etc/nginx/ssl/default.key;

    # Proxy settings
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    location / {
        proxy_pass http://pihole_backend;
    }
}

# Docker Registry
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name registry.${DOMAIN_NAME};

    ssl_certificate /etc/nginx/ssl/default.crt;
    ssl_certificate_key /etc/nginx/ssl/default.key;

    # Registry specific settings
    client_max_body_size 0;
    chunked_transfer_encoding on;

    # Proxy settings
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    location / {
        proxy_pass http://registry_backend;
        proxy_read_timeout 900;
    }
}

# Boot/PXE Server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name boot.${DOMAIN_NAME};

    ssl_certificate /etc/nginx/ssl/default.crt;
    ssl_certificate_key /etc/nginx/ssl/default.key;

    # Proxy settings
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    location / {
        proxy_pass http://nginx-boot:80;
    }
}
