{{- if .Values.nginx.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "omni-core.fullname" . }}-nginx
  labels:
    {{- include "omni-core.labels" . | nindent 4 }}
    app.kubernetes.io/component: nginx
spec:
  replicas: {{ .Values.nginx.replicaCount }}
  selector:
    matchLabels:
      {{- include "omni-core.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: nginx
  template:
    metadata:
      labels:
        {{- include "omni-core.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: nginx
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/nginx-configmap.yaml") . | sha256sum }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: nginx
        image: {{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}
        imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        - name: https
          containerPort: 443
          protocol: TCP
        - name: status
          containerPort: 8080
          protocol: TCP
        - name: machine-api
          containerPort: 8090
          protocol: TCP
        - name: k8s-proxy
          containerPort: 8100
          protocol: TCP
        volumeMounts:
        - name: config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
        - name: config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
          readOnly: true
        - name: tls
          mountPath: /etc/nginx/ssl
          readOnly: true
        - name: logs
          mountPath: /var/log/nginx
        - name: cache
          mountPath: /var/cache/nginx
        - name: run
          mountPath: /var/run
        resources:
          {{- toYaml .Values.nginx.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /nginx_status
            port: status
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /nginx_status
            port: status
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: config
        configMap:
          name: {{ include "omni-core.fullname" . }}-nginx-config
      - name: tls
        secret:
          secretName: {{ .Values.omni.tls.secretName | default (printf "%s-tls" (include "omni-core.fullname" .)) }}
      - name: logs
        emptyDir: {}
      - name: cache
        emptyDir: {}
      - name: run
        emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
